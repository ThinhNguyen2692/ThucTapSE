@*
    TicketDesk - Attribution notice
    Contributor(s):

         Stephen Redd (https://github.com/stephenredd)

    This file is distributed under the terms of the Microsoft Public
    License (Ms-PL). See http://opensource.org/licenses/MS-PL
    for the complete terms of use.

    For any distribution that contains code from this file, this notice of
    attribution must remain intact, and a copy of the license must be
    provided to the recipient.
*@
@using TicketDesk.Localization.Views.TicketCenter

@using PagedList.Mvc
@using TicketDesk.Domain.Model
@model TicketDesk.Web.Client.Models.TicketCenterListViewModel
@{
    var tickets = Model.Tickets;
    var ajaxSortOptions = new AjaxOptions { UpdateTargetId = "ticketList", OnBegin = "ticketCenter.sorts.beginChangeSort", OnSuccess = "ticketCenter.completeChangeList", OnFailure = "ticketCenter.completeChangeList" };
    var ajaxPagerOptions = new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "ticketList", OnBegin = "ticketCenter.paging.beginChangePage", OnSuccess = "ticketCenter.completeChangeList", OnFailure = "ticketCenter.completeChangeList" };
}
@section cssDetail{
    <style>
       
    </style>
}
<div id="ticketList" class="panel panel-default">
    <div class="panel-heading row-no-padding">
        @Html.Partial("_FilterBar")

    </div>
    <div class="panel-body" style="padding: 0;">

        <div class="table-responsive">
            <table class="table table-hover table-condensed">
                <thead>
                    <tr>
                        <th>
                            <a href="#">@Index.TicketList_ID</a> 
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "TicketId", Index.TicketList_ID, ajaxSortOptions)*@
                        </th>
                        <th>
                            <a href="#">@Index.TicketList_Title</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Title", Index.TicketList_Title, ajaxSortOptions)*@
                        </th>
                        <th>
                            <a href="#">@Index.TicketList_Status</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "TicketStatus", Index.TicketList_Status, ajaxSortOptions)*@
                        </th>
                        <th class="hidden-xs">
                            <a href="#">@Index.TicketList_Owner</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "Owner", Index.TicketList_Owner, ajaxSortOptions)*@
                        </th>
                        <th>
                            <a href="#">@Index.TicketList_Assigned</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "AssignedTo", Index.TicketList_Assigned, ajaxSortOptions)*@
                        </th>

                        <th>
                            <a href="#">@Index.TicketList_Target</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "TargetDate", Index.TicketList_Target, ajaxSortOptions)*@
                        </th>
                        <th style="color: #23527c;">
                            <a href="#">@Index.TicketList_Due</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "DueDate", Index.TicketList_Due, ajaxSortOptions)*@

                        </th>
                        <th class="hidden-sm hidden-xs">
                            <a href="#">@Index.TicketList_Created</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "CreatedDate", Index.TicketList_Created, ajaxSortOptions)*@
                        </th>
                        <th>
                            <a href="#">@Index.TicketList_Updated</a>
                            @*@Ajax.SortableColumnHeader(Html, Model.CurrentListSetting, Model.CurrentPage, "SortList", Model.CurrentListSetting.ListName, "LastUpdateDate", Index.TicketList_Updated, ajaxSortOptions)*@
                        </th>
                    </tr>
                </thead>
                <tbody class="ticketItems">

                    @foreach (var item in tickets)
                    {
                        
                            // Tính thời gian ngày thực hiện
                            var date = item.TargetDate.DateTime - DateTime.Now;
                        //Số ngày  còn lại
                            var day = date.Days;
                       
                        <tr class="clickable @(item.IsDue ? "due" : (item.IsOverDue ? "overdue" : string.Empty))">
                            <td colspan="2" style="white-space: normal;">
                                <a href="@Url.Action("Index", "Ticket", new { area = "", id = item.TicketId })" , style="margin-right: 1ex;">
                                    #@item.TicketId
                                </a>
                                @Html.DisplayFor(modelItem => item.Title)
                                @if (Model.DisplayProjects)
                                {
                                    <div>
                                        <span class="small text-muted">
                                            <i class="fa fa-book"></i>
                                            @item.Project.ProjectName
                                        </span>
                                    </div>
                                }
                            </td>
                            <td>
                                @* Nhân viên: đã phản hồi: *@
                                @* Admin: Chờ phản hồi *@
                                @if ( User.IsInRole("TdInternalUsers") && item.TicketStatus == TicketStatus.Resolved)
                                {
                                    item.TicketStatus = TicketStatus.ResolvedRoleUser;
                                }
                                 @if (day < 0 && (item.TicketStatus != TicketStatus.Closed && item.TicketStatus != TicketStatus.MoreInfo))
                                 {
                                     item.TicketStatus = TicketStatus.OutOfDate;
                                 }
                                <div class="@item.TicketStatus"> @Html.DisplayFor(modelItem => item.TicketStatus)</div>

                             

                            </td>
                            <td class="hidden-xs">
                                @Html.DisplayFor(modelItem => item.GetOwnerInfo().DisplayName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.GetAssignedToInfo().DisplayName)
                            </td>

                            <td class="hidden-sm hidden-xs">
                                @Html.DisplayFor(modelItem => item.TargetDateAsString)
                            </td>
                            <td class="hidden-sm hidden-xs">

                                @Html.Label(day.ToString())
                            </td>
                            <td class="hidden-sm hidden-xs">
                                @item.CreatedDate.ToString("d")<br />
                                @item.CreatedDate.ToString("t")
                            </td>
                            <td>
                                @item.LastUpdateDate.ToString("d")<br />
                                @item.LastUpdateDate.ToString("t")
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
    <div class="panel-footer">
        @Html.PagedListPager(Model.Tickets, page => Url.Action("PageList", new { listName = Model.CurrentListSetting.ListName, page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(ajaxPagerOptions))
    </div>
</div>